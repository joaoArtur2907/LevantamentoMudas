# Generated by Django 5.2.1 on 2025-05-17 18:23

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cultivar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomeCultivar', models.CharField(help_text='Nome do cultivar', max_length=100, unique=True, verbose_name='Nome do cultivar')),
            ],
        ),
        migrations.CreateModel(
            name='Propriedade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.CharField(help_text='Nome do responsável sobre a propriedade', max_length=100)),
                ('localGeo', models.CharField(blank=True, help_text='Localização Geográfica da propriedade', max_length=500, null=True, verbose_name='Localização')),
                ('contatoResponsavel', models.CharField(blank=True, help_text='Número de telefone do responsável sobre a propriedade', max_length=20, null=True, verbose_name='Telefone')),
                ('morangoAtividadePrincipal', models.BooleanField(default=False, verbose_name='Morango é a atividade principal da propriedade?')),
            ],
        ),
        migrations.CreateModel(
            name='Viveiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.CharField(help_text='Nome do responsável sobre o viveiro', max_length=100)),
                ('localGeo', models.CharField(blank=True, help_text='Localização Geográfica do viveiro', max_length=500, null=True, verbose_name='Localização')),
                ('contatoResponsavel', models.CharField(blank=True, help_text='Número de telefone do responsável sobre o viveiro', max_length=20, null=True, verbose_name='Telefone')),
                ('possuiAssistencia', models.BooleanField(blank=True, default=False, null=True, verbose_name='O viveiro possui assistência?')),
            ],
        ),
        migrations.CreateModel(
            name='DificuldadeProducao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomeDificuldade', models.CharField(blank=True, help_text='Tipo de dificuldade da producao', max_length=100, null=True, unique=True, verbose_name='Tipo de dificuldade')),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('nomeDificuldade'), name='dificuldade_name_case_insensitive_unique', violation_error_message='Dificuldade já existe (case insensitive match)')],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPropriedade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sistemas_de_producao', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Canteiro', 'Canteiro'), ('Estufa', 'Estufa')], max_length=100), blank=True, default=list, null=True, size=None)),
                ('numPlantas', models.IntegerField(blank=True, help_text='Numero de plantas da propriedade', null=True, verbose_name='Numero de plantas da propriedade')),
                ('B2B', models.IntegerField(blank=True, help_text='O quanto sua propriedade vende para outras empresas', null=True, verbose_name='Business to Business')),
                ('B2C', models.IntegerField(blank=True, help_text='O quanto sua propriedade vende diretamente ao público', null=True, verbose_name='Business to Consumer')),
                ('ano', models.IntegerField(help_text='Ano da resposta', verbose_name='Ano da resposta')),
                ('cultivar', models.ManyToManyField(help_text='Cultivares do viveiro', to='catalog.cultivar')),
                ('propriedade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.propriedade')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricoViveiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sistemas_de_producao', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Canteiro', 'Canteiro'), ('Estufa', 'Estufa')], max_length=100), blank=True, default=list, null=True, size=None)),
                ('numPlantas', models.IntegerField(blank=True, help_text='Numero de plantas da propriedade', null=True, verbose_name='Numero de plantas da propriedade')),
                ('numClientes', models.IntegerField(blank=True, help_text='Numero de clientes do viveiro', null=True, verbose_name='Numero de clientes do viveiro')),
                ('B2B', models.IntegerField(blank=True, help_text='O quanto seu viveiro vende para outras empresas', null=True, verbose_name='Business to Business')),
                ('B2C', models.IntegerField(blank=True, help_text='O quanto seu viveiro vende diretamente ao público', null=True, verbose_name='Business to Consumer')),
                ('ano', models.IntegerField(help_text='Ano da resposta', verbose_name='Ano da resposta')),
                ('cultivar', models.ManyToManyField(help_text='Cultivares do viveiro', to='catalog.cultivar')),
                ('viveiro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='catalog.viveiro')),
            ],
        ),
    ]
